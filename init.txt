# Custom Options
default_manual_training = true
travel_delay = 1
explore_delay = 1
rest_delay = -1
confirm_butcher = never
auto_butcher = very full

# Code begins here
{
local initialized = false
local did_first_turn = false
local dump_count = you.turns() + 100 - (you.turns() % 100)
local LOS = 7
if you.race() == "Barachi" then LOS = 8 end

function initialize()
  crawl.mpr("Hello world!")
end

function first_turn()
  crawl.mpr("First turn")
  -- todo: select weapon skill to prefer/train
end

-- TODO: change this so it keeps a list of all nearby monsters
function look_for_monsters()
  local mon
  for x = -LOS,LOS do
    for y = -LOS,LOS do
      mon = monster.get_monster_at(x, y)
      if mon ~= nil then
        crawl.mpr("just saw a " .. mon:name())
      end
    end
  end
end

-- counts all monsters in view
function countmonsters()
  local count = 0
  for x = -LOS,LOS do
    for y = -LOS,LOS do
      if monster.get_monster_at(x, y) ~= nil then
        count = count + 1
      end
    end
  end
  return count
end

function shouldrest()
  local chp, mhp = you.hp()
  if(chp < mhp) then 
    return true 
  else
    return false
  end
end

function press(command)
  crawl.process_keys(command)
end

function magic(command)
  crawl.process_keys(command .. string.char(27) .. string.char(27) .. string.char(27))
end

function pre_turn()
  if not initialized then
    initialize()
    initialized = true
  end
  if not did_first_turn and you.turns() == 0 then
    first_turn()
    did_first_turn = true
  end
  if you.turns() == old_turn_count then
    return
  end
  old_turn_count = you.turns()
  if you.turns() >= dump_count then
    dump_count = dump_count+100
    --uncomment this for periodic dumping
    --crawl.dump_char()
    --crawl.mpr("dumped char")
  end
end

-- This runs exactly once each turn.
function do_turn()
  if(countmonsters() == 0) then
    if(shouldrest()) then
      press(".")
      return
    else
      crawl.mpr("autoexplore")
      magic("o")
      return
    end
  end
  if(countmonsters() == 1) then
    crawl.mpr("hit monster")
    magic(string.char(11))
    return
  end
  if(countmonsters() > 1) then
    -- try to find a small spot to squeeze into then fight away
  end
  -- todo:
  -- either press tab, f or o depending on this variable
  -- also rush to a choke or whatever

  --at min delay, move to survival skill to prefer/train
end

function ready()
  pre_turn()
  do_turn()
end
}

# Reference
# TODO: delete or place in separate folder

##### Lua API - global game state #######################
#The "crawl" module provides functions that describe the game state or
#provide utility methods.
#mpr, mesclr, random2, coinflip, one_chance_in, redraw_screen,
#input_line, c_input_line, getch, kbhit, flush_input, sendkeys,
#playsound, runmacro, bindkey, setopt, msgch_num, msgch_name, regex,
#message_filter, trim, split, game_started, err_trace, args,
#mark_milestone

##### Lua API - character information #######################
#The "you" module provides functions that describe the player character.
#turn_is_over, spells, abilities, name, race, class, god, hp, mp,
#hunger, strength, intelligence, dexterity, xl, exp, res_poison,
#res_fire, res_cold, res_draining, res_shock, res_mutation, res_slowing,
#gourmand, levitating, flying, transform, stop_activity, floor_items,
#where, branch, subdepth, absdepth
